openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/v1/users/login:
    post:
      summary: 'Realiza o login do utilizador.'
      operationId: realizaOLoginDoUtilizador
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  token: eyJ0eXAiOiJKV1...
                  user:
                    id: 1
                    name: 'John Doe'
                    email: johndoe@example.com
                properties:
                  token:
                    type: string
                    example: eyJ0eXAiOiJKV1...
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: johndoe@example.com
      tags:
        - Autenticação
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'O email do utilizador.'
                  example: johndoe@example.com
                  nullable: false
                password:
                  type: string
                  description: 'A senha do utilizador.'
                  example: password123
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/v1/posts:
    get:
      summary: "Listar todos os posts\n\nEste endpoint retorna uma lista de todos os posts não deletados."
      operationId: listarTodosOsPostsEsteEndpointRetornaUmaListaDeTodosOsPostsNoDeletados
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  title: 'Meu primeiro post'
                  content: 'Este é o conteúdo do post.'
                  author_id: 1
                  created_at: '2023-08-30T19:20:02.000000Z'
                  updated_at: '2023-08-30T19:20:02.000000Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: 'Meu primeiro post'
                  content:
                    type: string
                    example: 'Este é o conteúdo do post.'
                  author_id:
                    type: integer
                    example: 1
                  created_at:
                    type: string
                    example: '2023-08-30T19:20:02.000000Z'
                  updated_at:
                    type: string
                    example: '2023-08-30T19:20:02.000000Z'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Nenhum post foi encontrada.'
                properties:
                  error:
                    type: string
                    example: 'Nenhum post foi encontrada.'
      tags:
        - Posts
  /api/v1/posts/create:
    get:
      summary: "Criar um novo post\n\nEste endpoint permite criar um novo post."
      operationId: criarUmNovoPostEsteEndpointPermiteCriarUmNovoPost
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Post criado com sucesso.'
                  data:
                    id: 1
                    title: 'Meu novo post'
                    content: 'Este é o conteúdo do post.'
                    author_id: 1
                    created_at: '2023-08-30T19:20:02.000000Z'
                    updated_at: '2023-08-30T19:20:02.000000Z'
                properties:
                  message:
                    type: string
                    example: 'Post criado com sucesso.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      title:
                        type: string
                        example: 'Meu novo post'
                      content:
                        type: string
                        example: 'Este é o conteúdo do post.'
                      author_id:
                        type: integer
                        example: 1
                      created_at:
                        type: string
                        example: '2023-08-30T19:20:02.000000Z'
                      updated_at:
                        type: string
                        example: '2023-08-30T19:20:02.000000Z'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Erro de validação'
                  messages:
                    title:
                      - 'O campo título é obrigatório.'
                    content:
                      - 'O campo conteúdo é obrigatório.'
                properties:
                  error:
                    type: string
                    example: 'Erro de validação'
                  messages:
                    type: object
                    properties:
                      title:
                        type: array
                        example:
                          - 'O campo título é obrigatório.'
                        items:
                          type: string
                      content:
                        type: array
                        example:
                          - 'O campo conteúdo é obrigatório.'
                        items:
                          type: string
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Erro no banco de dados.'
                properties:
                  error:
                    type: string
                    example: 'Erro no banco de dados.'
      tags:
        - Posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'O título do post. Exemplo: Meu novo post'
                  example: quaerat
                  nullable: false
                content:
                  type: string
                  description: 'O conteúdo do post.'
                  example: rerum
                  nullable: false
                author_id:
                  type: integer
                  description: 'O ID do autor. Exemplo: 1'
                  example: 17
                  nullable: false
                image:
                  type: string
                  description: 'O link da imagem. Exemplo: http://exemplo.com/imagem.png'
                  example: deserunt
                  nullable: false
              required:
                - title
                - content
                - author_id
  '/api/v1/posts/{id}':
    get:
      summary: "Exibir um post\n\nEste endpoint retorna os detalhes de um post específico."
      operationId: exibirUmPostEsteEndpointRetornaOsDetalhesDeUmPostEspecfico
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  title: 'Meu primeiro post'
                  content: 'Este é o conteúdo do post.'
                  author_id: 1
                  created_at: '2023-08-30T19:20:02.000000Z'
                  updated_at: '2023-08-30T19:20:02.000000Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: 'Meu primeiro post'
                  content:
                    type: string
                    example: 'Este é o conteúdo do post.'
                  author_id:
                    type: integer
                    example: 1
                  created_at:
                    type: string
                    example: '2023-08-30T19:20:02.000000Z'
                  updated_at:
                    type: string
                    example: '2023-08-30T19:20:02.000000Z'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Post não encontrado.'
                properties:
                  error:
                    type: string
                    example: 'Post não encontrado.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Erro no banco de dados.'
                properties:
                  error:
                    type: string
                    example: 'Erro no banco de dados.'
      tags:
        - Posts
    put:
      summary: "Atualizar um post\n\nEste endpoint permite atualizar um post existente."
      operationId: atualizarUmPostEsteEndpointPermiteAtualizarUmPostExistente
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Post atualizado com sucesso.'
                  data:
                    id: 1
                    title: 'Título atualizado'
                    content: 'Conteúdo atualizado'
                    author_id: 1
                    created_at: '2023-08-30T19:20:02.000000Z'
                    updated_at: '2023-08-30T19:40:02.000000Z'
                properties:
                  message:
                    type: string
                    example: 'Post atualizado com sucesso.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      title:
                        type: string
                        example: 'Título atualizado'
                      content:
                        type: string
                        example: 'Conteúdo atualizado'
                      author_id:
                        type: integer
                        example: 1
                      created_at:
                        type: string
                        example: '2023-08-30T19:20:02.000000Z'
                      updated_at:
                        type: string
                        example: '2023-08-30T19:40:02.000000Z'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Post não encontrado.'
                properties:
                  error:
                    type: string
                    example: 'Post não encontrado.'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Erro de validação'
                  messages:
                    title:
                      - 'O campo título é obrigatório.'
                    content:
                      - 'O campo conteúdo é obrigatório.'
                properties:
                  error:
                    type: string
                    example: 'Erro de validação'
                  messages:
                    type: object
                    properties:
                      title:
                        type: array
                        example:
                          - 'O campo título é obrigatório.'
                        items:
                          type: string
                      content:
                        type: array
                        example:
                          - 'O campo conteúdo é obrigatório.'
                        items:
                          type: string
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Erro no banco de dados.'
                properties:
                  error:
                    type: string
                    example: 'Erro no banco de dados.'
      tags:
        - Posts
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'O novo título do post. Exemplo: Título atualizado'
                  example: iure
                  nullable: false
                content:
                  type: string
                  description: 'O novo conteúdo do post.'
                  example: quas
                  nullable: false
                author_id:
                  type: integer
                  description: 'O ID atualizado do autor.'
                  example: 11
                  nullable: false
    delete:
      summary: "Excluir um post\n\nEste endpoint marca um post como excluído."
      operationId: excluirUmPostEsteEndpointMarcaUmPostComoExcludo
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Post excluído com sucesso.'
                properties:
                  message:
                    type: string
                    example: 'Post excluído com sucesso.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Post não encontrado.'
                properties:
                  error:
                    type: string
                    example: 'Post não encontrado.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Erro no banco de dados.'
                properties:
                  error:
                    type: string
                    example: 'Erro no banco de dados.'
      tags:
        - Posts
    parameters:
      -
        in: path
        name: id
        description: 'O ID do post. Exemplo: 1'
        example: 16
        required: true
        schema:
          type: integer
  /api/v1/post/create:
    post:
      summary: "Criar um novo post\n\nEste endpoint permite criar um novo post."
      operationId: criarUmNovoPostEsteEndpointPermiteCriarUmNovoPost
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Post criado com sucesso.'
                  data:
                    id: 1
                    title: 'Meu novo post'
                    content: 'Este é o conteúdo do post.'
                    author_id: 1
                    created_at: '2023-08-30T19:20:02.000000Z'
                    updated_at: '2023-08-30T19:20:02.000000Z'
                properties:
                  message:
                    type: string
                    example: 'Post criado com sucesso.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      title:
                        type: string
                        example: 'Meu novo post'
                      content:
                        type: string
                        example: 'Este é o conteúdo do post.'
                      author_id:
                        type: integer
                        example: 1
                      created_at:
                        type: string
                        example: '2023-08-30T19:20:02.000000Z'
                      updated_at:
                        type: string
                        example: '2023-08-30T19:20:02.000000Z'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Erro de validação'
                  messages:
                    title:
                      - 'O campo título é obrigatório.'
                    content:
                      - 'O campo conteúdo é obrigatório.'
                properties:
                  error:
                    type: string
                    example: 'Erro de validação'
                  messages:
                    type: object
                    properties:
                      title:
                        type: array
                        example:
                          - 'O campo título é obrigatório.'
                        items:
                          type: string
                      content:
                        type: array
                        example:
                          - 'O campo conteúdo é obrigatório.'
                        items:
                          type: string
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Erro no banco de dados.'
                properties:
                  error:
                    type: string
                    example: 'Erro no banco de dados.'
      tags:
        - Posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'O título do post. Exemplo: Meu novo post'
                  example: hic
                  nullable: false
                content:
                  type: string
                  description: 'O conteúdo do post.'
                  example: nulla
                  nullable: false
                author_id:
                  type: integer
                  description: 'O ID do autor. Exemplo: 1'
                  example: 19
                  nullable: false
                image:
                  type: string
                  description: 'O link da imagem. Exemplo: http://exemplo.com/imagem.png'
                  example: non
                  nullable: false
              required:
                - title
                - content
                - author_id
  '/api/v1/post/{$id}':
    post:
      summary: "Exibir um post\n\nEste endpoint retorna os detalhes de um post específico."
      operationId: exibirUmPostEsteEndpointRetornaOsDetalhesDeUmPostEspecfico
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  title: 'Meu primeiro post'
                  content: 'Este é o conteúdo do post.'
                  author_id: 1
                  created_at: '2023-08-30T19:20:02.000000Z'
                  updated_at: '2023-08-30T19:20:02.000000Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: 'Meu primeiro post'
                  content:
                    type: string
                    example: 'Este é o conteúdo do post.'
                  author_id:
                    type: integer
                    example: 1
                  created_at:
                    type: string
                    example: '2023-08-30T19:20:02.000000Z'
                  updated_at:
                    type: string
                    example: '2023-08-30T19:20:02.000000Z'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Post não encontrado.'
                properties:
                  error:
                    type: string
                    example: 'Post não encontrado.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Erro no banco de dados.'
                properties:
                  error:
                    type: string
                    example: 'Erro no banco de dados.'
      tags:
        - Posts
    parameters:
      -
        in: path
        name: $id
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'O ID do post. Exemplo: 1'
        example: 16
        required: true
        schema:
          type: integer
  /api/v1/users:
    get:
      summary: 'Lista todos os utilizadores.'
      operationId: listaTodosOsUtilizadores
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    name: 'John Doe'
                    email: johndoe@example.com
      tags:
        - Utilizadores
      security: []
  /api/v1/users/create:
    get:
      summary: 'Cria um novo utilizador.'
      operationId: criaUmNovoUtilizador
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Usuário criado com sucesso.'
                  data:
                    id: 1
                    name: 'John Doe'
                    email: johndoe@example.com
                properties:
                  message:
                    type: string
                    example: 'Usuário criado com sucesso.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: johndoe@example.com
      tags:
        - Utilizadores
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'O nome do utilizador.'
                  example: 'John Doe'
                  nullable: false
                email:
                  type: string
                  description: 'O email do utilizador.'
                  example: johndoe@example.com
                  nullable: false
                password:
                  type: string
                  description: 'A senha do utilizador.'
                  example: password123
                  nullable: false
              required:
                - name
                - email
                - password
      security: []
    post:
      summary: 'Cria um novo utilizador.'
      operationId: criaUmNovoUtilizador
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Usuário criado com sucesso.'
                  data:
                    id: 1
                    name: 'John Doe'
                    email: johndoe@example.com
                properties:
                  message:
                    type: string
                    example: 'Usuário criado com sucesso.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: johndoe@example.com
      tags:
        - Utilizadores
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'O nome do utilizador.'
                  example: 'John Doe'
                  nullable: false
                email:
                  type: string
                  description: 'O email do utilizador.'
                  example: johndoe@example.com
                  nullable: false
                password:
                  type: string
                  description: 'A senha do utilizador.'
                  example: password123
                  nullable: false
              required:
                - name
                - email
                - password
      security: []
  '/api/v1/users/{id}':
    get:
      summary: 'Exibe um utilizador específico.'
      operationId: exibeUmUtilizadorEspecfico
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: 'John Doe'
                  email: johndoe@example.com
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: 'John Doe'
                  email:
                    type: string
                    example: johndoe@example.com
      tags:
        - Utilizadores
      security: []
    put:
      summary: 'Atualiza um utilizador.'
      operationId: atualizaUmUtilizador
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Usuário atualizado com sucesso.'
                  data:
                    id: 1
                    name: 'John Doe'
                    email: johndoe@example.com
                properties:
                  message:
                    type: string
                    example: 'Usuário atualizado com sucesso.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: johndoe@example.com
      tags:
        - Utilizadores
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'O nome do utilizador.'
                  example: 'John Doe'
                  nullable: false
                email:
                  type: string
                  description: 'O email do utilizador.'
                  example: johndoe@example.com
                  nullable: false
                password:
                  type: string
                  description: 'A nova senha do utilizador.'
                  example: password123
                  nullable: false
              required:
                - name
                - email
                - password
      security: []
    delete:
      summary: 'Exclui um utilizador.'
      operationId: excluiUmUtilizador
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Usuário deletado com sucesso'
                properties:
                  message:
                    type: string
                    example: 'Usuário deletado com sucesso'
      tags:
        - Utilizadores
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'O ID do utilizador.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Autenticação
    description: ''
  -
    name: Posts
    description: ''
  -
    name: Utilizadores
    description: ''
